{"version":3,"sources":["js/actions/actionTypes.tsx","js/misc/constants.tsx","js/misc/utils.tsx","js/misc/helpers.tsx","js/misc/levels.tsx","js/reducers/index.tsx","js/components/Tile.tsx","js/components/Board.tsx","js/components/Header.tsx","js/components/StarsPoints.tsx","js/components/Overlay.tsx","js/components/InfoOverlay.tsx","js/components/HintsOverlay.tsx","js/components/LevelsDisplay.tsx","js/components/MenuOverlay.tsx","js/components/MenuBar.tsx","js/components/Game.tsx","js/actions/index.tsx","App.js","serviceWorker.js","index.js"],"names":["UPDATE_CELLS","SET_ACTIVE_TYPE","RESTART_CSS_CLASSES","RESTART_LEVEL","RESTART_GAME","SET_NEXT_LEVEL","SET_LEVEL","TOGGLE_MENU_OVERLAY","TOGGLE_HINTS","SHOW_HINTS_OVERLAY","HIDE_HINTS_OVERLAY","BOARD_WIDTH","BOARD_HEIGHT","WALL_TYPE","TILE_TYPES","1","2","3","4","100","transformFromStateToGrid","cells","tile","grid","tilesNo","length","x","row","y","push","positionX","positionY","transformFromGridToState","getMaxScores","localStorage","window","emptyBestScores","Array","fill","bestScores","getObject","getStarScores","emptyStarScores","starScores","getHintsVisibility","hintsVisibility","setLastLevelPlayed","level","setObject","resetCssClasses","state","cellsInGrid","levelData","finishCords","forEach","finishCoordinates","actionClass","updateScore","mergedCounter","singleScore","factorial","n","score","scoreClass","maxScores","isNewBestScore","Storage","prototype","key","obj","this","setItem","JSON","stringify","parse","getItem","LEVELS","type","isFinishTile","hint","test","navigator","userAgent","stars","maxMoves","minMoves","maxPoints","lastLevelPlayed","initialLevel","getLastLevelPlayed","initializeState","initializeLevel","levelsAmount","isMenuVisible","isHintsVisible","isHintsOverlayVisible","initializeCells","setFinishCords","activeType","nonStandardTilesAmount","countTiles","setHint","moves","isLevelFinished","isGameFinished","newTile","currentLevel","uniqueKey","tileFoundInNextCell","coordinate","reduce","accumulator","currentValue","moveTiles","move","newActiveType","cell","newPosition","availableCells","filter","toBeMergedWithFinish","cellsAmount","alreadyMovedTile","isCellMergable","traversals","pos","reverse","buildTraversals","moveVector","getMoveVector","prevCell","cellX","cellY","tileInCell","nextTile","withinBounds","findAvailablePosition","prevPosition","isCellMovable","moveCell","starScore","calculateStarScore","setMaxScores","setStarScores","setActiveType","toogleHintsAvailable","newState","rootReducer","action","payload","keyPressedNo","Tile","tileClassName","onMouseClick","useState","newTileClassName","setData","useEffect","requestAnimationFrame","className","data-type","onClick","connect","activeFinishCords","boardClassName","classNames","tiles","i","typeClass","positionClass","positionClassFinish","isTileActive","isTileFinish","toString","logoClass","singleScoreClassName","singleScoreValue","bestScore","levelToShow","StarsPoints","customCssClass","Overlay","overlayClass","overlayWrapperClass","title","text","buttons","onLevelRestart","onShowMenu","onNextLevel","infoOverlayClass","visible","infoOverlayWrapperClass","best","onClose","hintsOverlayClass","hintsOverlayWrapperClass","Level","onSetLevel","levels","onCloseMenu","onGameRestart","onToggleHints","menuOverlayClass","href","target","rel","MenuBar","IDLE_TIMER","isKeyPressed","Game","handleMove","eventKey","selectedType","parseInt","dataset","classList","contains","handleCellsUpdate","setTimeout","KeyPressMap","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","w","d","s","a","SwipeUp","SwipeRight","SwipeDown","SwipeLeft","props","updateCells","handleMouseClick","handleRestartLevel","restartLevel","handleRestartGame","restartGame","handleToggleMenu","toggleMenuOverlay","handleSetNextLevel","setNextLevel","handleSetLevel","levelNo","setLevel","handleHideHintsOverlay","hideHintsOverlay","handleToggleHints","toggleHints","onSwipeUp","no","event","onSwipeDown","onSwipeLeft","onSwipeRight","onSwipeMove","position","document","addEventListener","innerRef","tolerance","bind","React","dispatch","updateCellsObj","restartCssClasses","store","createStore","reducers","App","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"oOAAaA,EAAe,eACfC,EAAkB,kBAClBC,EAAsB,sBACtBC,EAAgB,gBAChBC,EAAe,eACfC,EAAiB,iBACjBC,EAAY,YACZC,EAAsB,sBACtBC,EAAe,eACfC,EAAqB,qBACrBC,EAAqB,qBCVrBC,EAAc,EACdC,EAAe,EACfC,EAAY,IACZC,EAAa,CACzBC,EAAG,UACHC,EAAG,YACHC,EAAG,WACHC,EAAG,aACHC,IAAK,QCDC,SAASC,EAAyBC,GAKxC,IAJA,IACCC,EADGC,EAAO,GAEVC,EAAUH,EAAMI,OAERC,EAAI,EAAGA,EAAIf,EAAae,IAGhC,IAFA,IAAIC,EAAOJ,EAAKG,GAAK,GAEZE,EAAI,EAAGA,EAAIhB,EAAcgB,IACjCD,EAAIE,KAAK,MAIX,IAAK,IAAIH,EAAI,EAAGA,EAAIF,EAASE,IAE5BH,GADAD,EAAOD,EAAMK,IACHI,WAAWR,EAAKS,WAAaT,EAGxC,OAAOC,EAOD,SAASS,EAAyBT,GAGxC,IAFA,IAAIF,EAAQ,GAEHK,EAAI,EAAGA,EAAIf,EAAae,IAChC,IAAK,IAAIE,EAAI,EAAGA,EAAIhB,EAAcgB,IAC7BL,EAAKG,GAAGE,IACXP,EAAMQ,KAAKN,EAAKG,GAAGE,IAKtB,OAAOP,EAqCD,SAASY,IACf,IAAMC,EAAeC,OAAOD,aACxBE,EAAiC,IAAIC,MAAM,GAAGC,KAAK,GAEnDC,EAAaL,EAAaM,UAAU,6BAExC,MAA6B,qBAAfD,GACE,OAAfA,GACsB,IAAtBA,EAAWd,OACTW,EACAG,EASG,SAASE,IACf,IAAMP,EAAeC,OAAOD,aACxBQ,EAAiC,IAAIL,MAAM,GAAGC,KAAK,GAEnDK,EAAaT,EAAaM,UAAU,6BAExC,MAA6B,qBAAfG,GACE,OAAfA,GACsB,IAAtBA,EAAWlB,OACTiB,EACAC,EASG,SAASC,IACf,IAGIC,EAHiBV,OAAOD,aAGOM,UAClC,kCAGD,MAAkC,qBAApBK,GAAuD,OAApBA,GAE9CA,EAeG,SAASC,EAAmBC,GACbZ,OAAOD,aAEfc,UAAU,kCAAmCD,GC1IpD,SAASE,EAAgBC,GAC/B,IAAIC,EAAc/B,EAAyB8B,EAAME,UAAU/B,OAQ3D,OANA6B,EAAME,UAAUC,YAAYC,SAAQ,SAACC,GACpCJ,EAAYI,EAAkBzB,WAC7ByB,EAAkBxB,WACjByB,YAAc,MAGVxB,EAAyBmB,GAG1B,SAASM,EAAYP,EAAkBQ,GAC7C,IAAMC,EDyBA,SAASC,EAAUC,GACzB,OAAU,IAANA,EACI,EAEAA,EAAID,EAAUC,EAAI,GC7BND,CAAUF,GAAiBA,EAAgB,GAE/DR,EAAME,UAAUO,YAAcA,EAC9BT,EAAME,UAAUU,OAASH,EACzBT,EAAME,UAAUW,WAAa,WAEzBb,EAAME,UAAUU,MAAQZ,EAAMc,UAAUd,EAAME,UAAUL,SAC3DG,EAAMc,UAAUd,EAAME,UAAUL,OAASG,EAAME,UAAUU,MACzDZ,EAAME,UAAUa,gBAAiB,GDqCnCC,QAAQC,UAAUnB,UAAY,SAAUoB,EAAKC,GAC5C,OAAOC,KAAKC,QAAQH,EAAKI,KAAKC,UAAUJ,KAGzCH,QAAQC,UAAU3B,UAAY,SAAU4B,GACvC,OAAOI,KAAKE,MAAMJ,KAAKK,QAAQP,KEnEhC,IAQaQ,EAA0B,CAEtC,CACC,CACC9C,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdC,KFoCD,iEAAiEC,KAChEC,UAAUC,WErDkB,wKAiB5BC,MAAO,CACNC,SAAU,EACVC,SAAU,EACVC,UAAW,IAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdC,KAAK,qHAGLI,MAAO,CACNC,SAAU,EACVC,SAAU,EACVC,UAAW,KAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdC,KAAK,oEAELI,MAAO,CACNC,SAAU,EACVC,SAAU,EACVC,UAAW,IAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdC,KAAK,+BACLI,MAAO,CACNC,SAAU,EACVC,SAAU,EACVC,UAAW,IAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,IA+ChB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdK,MAAO,CACNC,SAAU,EACVC,SAAU,EACVC,UAAW,KAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdK,MAAO,CACNC,SAAU,EACVC,SAAU,GACVC,UAAW,KAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdK,MAAO,CACNC,SAAU,GACVC,SAAU,GACVC,UAAW,IAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdK,MAAO,CACNC,SAAU,GACVC,SAAU,GACVC,UAAW,MAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,IAIhB,CACC,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,EACdK,MAAO,CACNC,SAAU,GACVC,SAAU,GACVC,UAAW,IAGb,CACCxD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAM,EACNC,cAAc,GAEf,CACChD,UAAW,EACXC,UAAW,EACX8C,KAAMhE,EACNiE,cAAc,KC7bXS,EH0FC,SAA4BC,GAClC,IAEID,EAFiBpD,OAAOD,aAEOM,UAClC,mCAGD,MAAkC,qBAApB+C,GAAuD,OAApBA,EAC9CC,EACAD,EGnGoBE,CADF,GAatB,SAASC,IACR,MAAO,CACNtC,UAAWuC,EAF0C,uDAAd,GAGvC3B,UAAW/B,IACXU,WAAYF,IACZmD,aAAchB,EAAOnD,OACrBoE,eAAe,EACfC,eAAgBlD,IAChBmD,uBAAuB,GAIzB,SAASJ,IAA+C,IAA/B5C,EAA8B,uDAAd,EACxC,MAAO,CACNA,MAAOA,EACP1B,MAAO2E,EAAgBjD,GACvBM,YAAa4C,EAAelD,GAC5BmD,WAAY,EACZC,uBAAwBC,EAAWrD,GACnCgC,KAAMsB,EAAQtD,GACdoC,MAAOP,EAAO7B,GAAO,GAAGoC,MACxBrB,MAAO,EACPH,YAAa,EACbI,WAAY,GACZE,gBAAgB,EAChBqC,MAAO,EACPC,iBAAiB,EACjBC,gBAAgB,GAKlB,SAASR,IAA4C,IAEnDS,EAFuB1D,EAA2B,uDAAX,EACpC1B,EAAQ,GAEXqF,EAAe9B,EAAO7B,GACtB4D,EAAY,EAab,OAXAD,EAAapD,SAAQ,SAAChC,GACrBmF,EAAO,eACHnF,EADG,CAENqF,UAAWA,EACXC,qBAAqB,EACrBpD,YAAa,KAEdmD,IACAtF,EAAMQ,KAAK4E,MAGLpF,EAGR,SAAS4E,IAAuD,IAAxClD,EAAuC,uDAAvB,EACnCM,EAAc,GAalB,OAZgBuB,EAAO7B,GAEVO,SAAQ,SAAChC,GACrB,GAAIA,EAAKwD,aAAc,CACtB,IAAI+B,EAAa,CAChB/E,UAAWR,EAAKQ,UAChBC,UAAWT,EAAKS,WAEjBsB,EAAYxB,KAAKgF,OAIZxD,EAGR,SAAS+C,IAAuC,IAA5BrD,EAA2B,uDAAX,EAWnC,OAVmB6B,EAAO7B,GAEK+D,QAAO,SAAUC,EAAaC,GAC5D,OAAIA,EAAalC,cAAgBkC,EAAanC,OAAShE,EAC/CkG,EAAc,EAEdA,IAEN,GAKJ,SAASV,IAAoC,IAA5BtD,EAA2B,uDAAX,EAC5BgC,EAAO,GAUX,OATgBH,EAAO7B,GAEVO,SAAQ,SAAChC,GACjBA,EAAKyD,OACRA,EAAOzD,EAAKyD,SAKPA,EAGR,SAASkC,EACRC,EACAhE,EACAiE,GAGA,GAAIjE,EAAM2C,cACT,OAAO3C,EAAME,UAAU/B,MAGxB,IAAI+F,EACHC,EACAnB,EAAaiB,GAAgCjE,EAAME,UAAU8C,WAC7DoB,EAAmCpE,EAAME,UAAU/B,MAkF9BkG,QAAO,SAACH,GAAD,OAAWA,EAAKI,wBAjF5CrE,EAAc/B,EAAyBkG,GACvCG,EACCH,EAAe7F,OAASyB,EAAME,UAAU+C,uBACzCzC,EAAwB,EACxBgE,GAA4B,EAC5BC,GAA0B,EAGrBC,EA2GP,SAAyBV,GAMxB,IALA,IAAIU,EAAa,CAChBlG,EAAG,GACHE,EAAG,IAGKiG,EAAM,EAAGA,EAAMlH,EAAakH,IACpCD,EAAWlG,EAAEG,KAAKgG,GAClBD,EAAWhG,EAAEC,KAAKgG,GAKN,IAATX,IAAYU,EAAWlG,EAAIkG,EAAWlG,EAAEoG,WAC/B,IAATZ,IAAYU,EAAWhG,EAAIgG,EAAWhG,EAAEkG,WAE5C,OAAOF,EA3HYG,CAAgBb,GAClCc,EA6FF,SAAuBd,GAStB,MAPY,CACXnG,EAAG,CAAEW,EAAG,EAAGE,GAAI,GACfZ,EAAG,CAAEU,EAAG,EAAGE,EAAG,GACdX,EAAG,CAAES,EAAG,EAAGE,EAAG,GACdV,EAAG,CAAEQ,GAAI,EAAGE,EAAG,IAGLsF,GAtGGe,CAAcf,GAkE5B,OA/DIhE,EAAM6C,wBACT7C,EAAM6C,uBAAwB,GAG/B9C,EAAgBC,GAGhB0E,EAAWlG,EAAE4B,SAAQ,SAAC5B,GACrBkG,EAAWhG,EAAE0B,SAAQ,SAAC1B,IACrBwF,EAAOjE,EAAYzB,GAAGE,KACVwF,EAAKvC,OAASqB,IAAekB,EAAKtC,gBAC7CuC,EA+GJ,SACCD,EACA/F,EACA2G,GAEA,IAAIE,EAAUtB,EAAqBuB,EAAOC,EAAOZ,EAGjD,GACCU,EAAWd,EACXe,EAAQf,EAAKtF,UAAYkG,EAAWtG,EACpC0G,EAAQhB,EAAKrF,UAAYiG,EAAWpG,EACpCgF,EAAsByB,EAAWhH,EAAO8G,EAAOC,GAC/CZ,EACCZ,IACEA,EAAoB9B,cACrB8B,EAAoB/B,OAASuC,EAAKvC,MAClC+B,EAAoBY,sBACtBJ,EAAO,CACNtF,UAAWqG,EACXpG,UAAWqG,EACXvD,KAAMuC,EAAKvC,KACXC,aAAcsC,EAAKtC,aACnB6B,UAAWS,EAAKT,UAChBnD,YAAa,GACb8E,SAAU1B,EACVY,qBAAsBA,SAEfe,EAAanB,KAAUR,GAKhC,OAFAsB,EAASI,SAAW1B,EACpBsB,EAASV,qBAAuBA,EACzBU,EAhJUM,CAAsBpB,EAAMjE,EAAa6E,IAE1CM,WACVjB,EAAYiB,SAASxD,cACtBuC,EAAYiB,SAASzD,OAASuC,EAAKvC,MACnCwC,EAAYiB,SAASd,wBAEtBG,GAAiB,EAGhBN,EAAYiB,SAASxD,cACrBuC,EAAYiB,SAASzD,OAASuC,EAAKvC,OAEnCwC,EAAYiB,SAAS9E,YAAc,UAIhC6D,EAAYG,uBACfH,EAAY7D,YAAc,WAG3BE,IACA+D,MAyCL,SAAkBpG,EAAiBgG,EAAmBoB,GACrD,IAAIC,GAAyB,EAG5BrB,EAAYvF,YAAc2G,EAAa3G,WACvCuF,EAAYtF,YAAc0G,EAAa1G,YAEvCV,EAAMgG,EAAYvF,WAAWuF,EAAYtF,WAAasF,EACtDhG,EAAMoH,EAAa3G,WAAW2G,EAAa1G,WAAa,KAExD2G,GAAgB,GAGjB,OAAOA,EApDYC,CAASxF,EAAakE,EAAaD,KAE7BO,GAAoBD,IACzCxE,EAAME,UAAUkD,QAChBoB,GAAmB,UAMlBhE,EAGJD,EAAYP,EAAOQ,GAFnBR,EAAME,UAAUW,WAAa,GAKV,IAAhB0D,IACHvE,EAAME,UAAUmD,iBAAkB,EAClCrD,EAAMP,WAAWO,EAAME,UAAUL,OFpM5B,SAA4BG,GAClC,IAAI0F,EAAY,EAiBhB,OAdC1F,EAAME,UAAUkD,OAASpD,EAAME,UAAU+B,MAAMC,YAC7ClC,EAAME,UAAU+B,MAAMG,WACvBpC,EAAME,UAAUU,QAAUZ,EAAME,UAAU+B,MAAMG,WAEjDsD,EAAY,GAEX1F,EAAME,UAAUkD,OAASpD,EAAME,UAAU+B,MAAMC,UAC/ClC,EAAME,UAAU+B,MAAMG,WACtBpC,EAAME,UAAUU,QAAUZ,EAAME,UAAU+B,MAAMG,WACjDpC,EAAME,UAAUkD,OAASpD,EAAME,UAAU+B,MAAME,YAE/CuD,EAAY,GAGNA,EEkLoCC,CAAmB3F,GH3JxD,SAAsBA,GACPf,OAAOD,aAEfc,UAAU,4BAA6BE,EAAMc,WG0JzD8E,CAAa5F,GH1IR,SAAuBA,GACRf,OAAOD,aAEfc,UAAU,4BAA6BE,EAAMP,YGwIzDoG,CAAc7F,GAEVA,EAAME,UAAUL,QAAUG,EAAM0C,aAAe,IAClD1C,EAAME,UAAUoD,gBAAiB,IAI5BxE,EAAyBmB,GA+FjC,SAASoF,EAAanB,GACrB,OACCA,EAAKtF,WAAa,GAClBsF,EAAKtF,UAAYnB,GACjByG,EAAKrF,WAAa,GAClBqF,EAAKrF,UAAYnB,EAKnB,SAASyH,EACRhH,EACA8G,EACAC,GAEA,OAAI/G,EAAM8G,IAAU9G,EAAM8G,GAAOC,GACzB/G,EAAM8G,GAAOC,GAEb,KAIT,SAASY,EAAc5B,EAAYlB,GAClC,OAAOkB,EAAKvC,OAAShE,EAAYuG,EAAKvC,KAAOqB,EAG9C,SAAS+C,EAAqB/F,GAC7B,IHzPkC4C,EGyP5BoD,EAAQ,eACVhG,EADU,CAEb4C,gBAAiB5C,EAAM4C,iBAKxB,OHhQkCA,GG8Pd5C,EAAM4C,eH7PL3D,OAAOD,aAEfc,UAAU,iCAAkC8C,GG6PlDoD,EAGR,IAuGeC,EAvGK,WAGH,IACZD,EAHJhG,EAEe,uDAFPwC,EAAgBH,GACxB6D,EACe,uCAGf,OAAQA,EAAOvE,MACd,KAAK7E,EAeJ,OAdAkJ,EAAQ,eACJhG,EADI,CAEPE,UAAU,eACNF,EAAME,UADD,CAER8C,WAAYkD,EAAOC,QAAQlC,cACxBiC,EAAOC,QAAQlC,cACfjE,EAAME,UAAU8C,WACnB7E,MAAO4F,EACNmC,EAAOC,QAAQC,aACfpG,EACAkG,EAAOC,QAAQlC,mBAKnB,KAAKlH,EAQJ,OAPAiJ,EAAQ,eACJhG,EADI,CAEPE,UAAU,eACNF,EAAME,UADD,CAER8C,WAAY8C,EAAcI,EAAOC,QAASnG,EAAME,UAAU8C,gBAI7D,KAAKhG,EASJ,OARAgJ,EAAQ,eACJhG,EADI,CAEPE,UAAU,eACNF,EAAME,UADD,CAER/B,MAAO4B,EAAgBC,GACvBa,WAAY,OAIf,KAAK5D,EAOJ,OANA+I,EAAQ,eACJhG,EADI,CAEPE,UAAWuC,EAAgBzC,EAAME,UAAUL,OAC3C8C,eAAe,EACfE,uBAAuB,IAGzB,KAAK3F,EAOJ,OANA8I,EAAQ,eACJhG,EADI,CAEPE,UAAWuC,EAhYO,GAiYlBE,eAAe,EACfE,uBAAuB,IAGzB,KAAK1F,EAOJ,OANA6I,EAAQ,eACJhG,EADI,CAEPE,UAAWuC,EAAgBzC,EAAME,UAAUL,MAAQ,GACnDgD,uBAAuB,IAExBjD,EAAmBI,EAAME,UAAUL,MAAQ,GACpCmG,EACR,KAAK5I,EAQJ,OAPA4I,EAAQ,eACJhG,EADI,CAEPE,UAAWuC,EAAgByD,EAAOC,SAClCxD,eAAe,EACfE,uBAAuB,IAExBjD,EAAmBsG,EAAOC,SACnBH,EACR,KAAK3I,EAOJ,OANA2I,EAAQ,eACJhG,EADI,CAEPE,UAAU,eAAMF,EAAME,UAAb,CAAwBmD,iBAAiB,IAClD5D,WAAYF,IACZoD,eAAgB3C,EAAM2C,gBAGxB,KAAKrF,EAEJ,OADA0I,EAAWD,EAAqB/F,GAEjC,KAAKzC,EAKJ,OAJAyI,EAAQ,eACJhG,EADI,CAEP6C,uBAAuB,IAGzB,KAAKrF,EAKJ,OAJAwI,EAAQ,eACJhG,EADI,CAEP6C,uBAAuB,IAGzB,QACC,OAAO7C,I,qFCrbKqG,GAxB8B,SAAC,GAIvC,IAHNC,EAGK,EAHLA,cACApC,EAEK,EAFLA,KACAqC,EACK,EADLA,aACK,EAC+BC,mBACnC,MAFI,oBACEC,EADF,KACoBC,EADpB,KAWL,OANAC,qBAAU,WACTC,uBAAsB,WACrBF,EAAQJ,QAEP,CAACA,IAGH,yBACCO,UAAWJ,EACXK,YAAW5C,EAAKvC,KAChBoF,QAAS,kBAAMR,EAAarC,OC2ChB8C,gBAzDS,SAAChH,GACxB,MAAO,CACN7B,MAAO6B,EAAME,UAAU/B,MACvBgC,YAAaH,EAAME,UAAUC,YAC7B6C,WAAYhD,EAAME,UAAU8C,cAqDfgE,EAjD+B,SAAC,GAKxC,IAJN7I,EAIK,EAJLA,MACAgC,EAGK,EAHLA,YACA6C,EAEK,EAFLA,WACAuD,EACK,EADLA,aAEMU,EAAoB9G,EAAY6C,EAAa,GAClDkE,EAAiBC,KAAW,OAAQvJ,EAAWoF,IAC5CoE,EAAQ,GAiCZ,OA/BAjJ,EAAMiC,SAAQ,SAAC8D,EAAMmD,GACpB,IAAMC,EAAY,aAAe1J,EAAWsG,EAAKvC,MAChD4F,EAAgB,iBAAmBrD,EAAKtF,UAAY,IAAMsF,EAAKrF,UAC/D2I,EACC,iBACAP,EAAkBrI,UAClB,IACAqI,EAAkBpI,UACnByB,EAAc,eAAiB4D,EAAK5D,YACpCmH,EAAezE,IAAekB,EAAKvC,KACnC+F,EAAexD,EAAKtC,aACpB0E,EAAgBa,KACf,OACAG,EACA,CAAE,mBAAoBI,GACtBxD,EAAKI,qBAAuBkD,EAAsBD,EAClDjH,EACA,CAAE,cAAemH,IAElBrJ,EACC,kBAAC,GAAD,CACCkI,cAAeA,EACfpC,KAAMA,EACNqC,aAAcA,EACdrF,IAAKgD,EAAKT,UAAUkE,aAIvBP,EAAMzI,KAAKP,MAIX,yBAAKyI,UAAWK,GACf,yBAAKL,UAAU,SACf,yBAAKA,UAAU,SAASO,OCEZJ,gBArDS,SAAChH,GACxB,MAAO,CACNY,MAAOZ,EAAME,UAAUU,MACvBH,YAAaT,EAAME,UAAUO,YAC7BK,UAAWd,EAAMc,UACjBjB,MAAOG,EAAME,UAAUL,MACvBuD,MAAOpD,EAAME,UAAUkD,MACvBJ,WAAYhD,EAAME,UAAU8C,WAC5BnC,WAAYb,EAAME,UAAUW,cA6CfmG,EAzCgC,SAAC,GAQzC,IAPNpG,EAOK,EAPLA,MACAH,EAMK,EANLA,YACAK,EAKK,EALLA,UACAjB,EAIK,EAJLA,MACAuD,EAGK,EAHLA,MACAJ,EAEK,EAFLA,WACAnC,EACK,EADLA,WAEM+G,EAAYT,KAAW,OAAQ,QAAUvJ,EAAWoF,IACzD6E,EAAuBV,KAAW,uBAAwBtG,GAC1DiH,EAAmB,IAAMrH,EACzBsH,EAAYjH,EAAUjB,GACtBmI,EAAcnI,EAAQ,EAEvB,OACC,yBAAKgH,UAAU,UACd,wBAAIA,UAAWe,GAAf,WACA,yBAAKf,UAAU,yBACd,yBAAKA,UAAU,sBACd,uBAAGA,UAAU,yCAAb,SACA,uBAAGA,UAAU,iBAAiBmB,IAE/B,yBAAKnB,UAAU,sBACd,uBAAGA,UAAU,yCAAb,SACA,uBAAGA,UAAU,iBAAiBzD,IAE/B,yBAAKyD,UAAU,sBACd,uBAAGA,UAAU,yCAAb,SACA,uBAAGA,UAAU,iBAAiBjG,GAC9B,0BAAMiG,UAAWgB,GAAuBC,IAEzC,yBAAKjB,UAAU,sBACd,uBAAGA,UAAU,yCAAb,QACA,uBAAGA,UAAU,iBAAiBkB,SC3BpBE,GA1BqC,SAAC,GAI9C,IAHNrH,EAGK,EAHLA,MACGf,EAEE,EAFFA,MACAqI,EACE,EADFA,eAECb,EAAI,EAEP5D,EAAY,GACZxB,EAAQ,GAET,IAAKoF,EAAI,EAAGA,GAJQ,EAIeA,IAClC5D,EAAS,eAAW5D,EAAX,YAAoBwH,GACzBA,GAAKzG,EACRqB,EAAMtD,KAAK,uBAAGkI,UAAU,cAAc3F,IAAKuC,KAE3CxB,EAAMtD,KAAK,uBAAGkI,UAAU,cAAc3F,IAAKuC,KAI7C,OACC,yBAAKoD,UAAWqB,GACLjG,ICIEkG,GAvBiC,SAAC,GAM1C,IALNC,EAKK,EALLA,aACGC,EAIE,EAJFA,oBACHC,EAGK,EAHLA,MACGC,EAEE,EAFFA,KACAC,EACE,EADFA,QAEH,OACC,6BACC,yBAAK3B,UAAWwB,IAChB,yBAAKxB,UAAWuB,GACH,uBAAGvB,UAAU,kBAAkByB,GAC3C,yBAAKzB,UAAU,iBACb0B,GAEF,6BACEC,MCwESxB,gBA/ES,SAAChH,GACxB,MAAO,CACNqD,gBAAiBrD,EAAME,UAAUmD,gBACjCC,eAAgBtD,EAAME,UAAUoD,eAChC7D,WAAYO,EAAMP,WAClBI,MAAOG,EAAME,UAAUL,MACvBuD,MAAOpD,EAAME,UAAUkD,MACvBxC,MAAOZ,EAAME,UAAUU,MACvBG,eAAgBf,EAAME,UAAUa,kBAuEnBiG,EAnEqC,SAAC,GAW9C,IAVN3D,EAUK,EAVLA,gBACAC,EASK,EATLA,eACA7D,EAQK,EARLA,WACAI,EAOK,EAPLA,MACAuD,EAMK,EANLA,MACAxC,EAKK,EALLA,MACAG,EAIK,EAJLA,eACA0H,EAGK,EAHLA,eACAC,EAEK,EAFLA,WACAC,EACK,EADLA,YAEMC,EAAmBzB,KAAW,UAAW,CAC7C0B,QAASxF,IAEVyF,EAA0B3B,KAAW,kBAAmB,CACvD0B,QAASxF,IAEVxC,EAAasG,KAAW,uBAAwB,CAC/C4B,KAAMhI,IAEP2E,EAAYjG,EAAWI,GAExB,OACC,kBAAC,GAAD,CACCuI,aAAcQ,EACdP,oBAAqBS,EACrBR,MAAM,mBACNC,KACC,6BACC,uBAAG1B,UAAU,iBAAb,SAAoChH,EAAQ,EAA5C,eACA,yBAAKgH,UAAU,uBACd,yBAAKA,UAAWhG,GAAhB,UACA,yBAAKgG,UAAU,wBAAwBjG,IAExC,yBAAKiG,UAAU,uBACd,yBAAKA,UAAU,wBAAf,UACA,yBAAKA,UAAU,wBAAwBzD,IAExC,yBAAKyD,UAAU,kBACf,kBAAC,GAAD,CACChH,MAAOA,EACPe,MAAO8E,EACPwC,eAAgB,kBAInBM,QACC,yBAAK3B,UAAU,4BACd,4BAAQA,UAAU,SAASE,QAAS0B,GACnC,uBAAG5B,UAAU,gBADd,YAGCvD,EACA,4BAAQuD,UAAU,SAASE,QAAS2B,GAApC,gBAIA,4BAAQ7B,UAAU,SAASE,QAAS4B,GAApC,QACM,uBAAG9B,UAAU,8BChCVG,gBA5CS,SAAChH,GACxB,MAAO,CACN6B,KAAM7B,EAAME,UAAU2B,KACtBe,eAAgB5C,EAAM4C,eACtBC,sBAAuB7C,EAAM6C,sBAC7BF,cAAe3C,EAAM2C,iBAuCRqE,EAnCsC,SAAC,GAM/C,IALNnF,EAKK,EALLA,KACAe,EAIK,EAJLA,eACAC,EAGK,EAHLA,sBACAF,EAEK,EAFLA,cACAqG,EACK,EADLA,QAEMC,EAAoB9B,KAAW,UAAW,CAC9C0B,YACChH,GAAQgB,GAAyBD,IAAmBD,KAItDuG,EAA2B/B,KAAW,kBAAmB,CACxD0B,YACChH,GAAQgB,GAAyBD,IAAmBD,KAKvD,OACC,kBAAC,GAAD,CACCyF,aAAca,EACdZ,oBAAqBa,EACrBZ,MAAM,gBACNC,KAAM1G,EACN2G,QACC,4BAAQ3B,UAAU,6BAA6BE,QAASiC,GAAxD,YClCEG,GAA6C,SAAC,GAI7C,IAHHtJ,EAGE,EAHFA,MACAe,EAEE,EAFFA,MACAwI,EACE,EADFA,WAEA,OACI,4BAAQvC,UAAU,uBAAuBE,QAAS,kBAAMqC,EAAWvJ,EAAQ,KACvE,uBAAGgH,UAAU,oBAAoBhH,GACjC,kBAAC,GAAD,CAAaA,MAAOA,EAAOe,MAAOA,MAkC/BoG,gBA7BS,SAAChH,GACxB,MAAO,CACAP,WAAYO,EAAMP,cA2BXuH,EAvBuC,SAAC,GAGhD,IACCK,EAHJ5H,EAEE,EAFFA,WACH2J,EACK,EADLA,WAGO3F,EAAY,GACZ4F,EAAS,GAEb,IAAKhC,EAAI,EAAGA,EAAI,EAAGA,IACf5D,EAAS,gBAAY4D,GACrBgC,EAAO1K,KACH,kBAAC,GAAD,CAAOkB,MAAOwH,EAAI,EAAGnG,IAAKuC,EAAW7C,MAAOnB,EAAW4H,GAAI+B,WAAYA,KAIlF,OACO,yBAAKvC,UAAU,UACX,uBAAGA,UAAU,kBAAb,UACCwC,MC8DErC,gBAjGS,SAAChH,GACxB,MAAO,CACN2C,cAAe3C,EAAM2C,cACrB9C,MAAOG,EAAME,UAAUL,MACvBuD,MAAOpD,EAAME,UAAUkD,MACvBR,eAAgB5C,EAAM4C,kBA4FToE,EAxFqC,SAAC,GAU9C,IATNrE,EASK,EATLA,cACA9C,EAQK,EARLA,MACAuD,EAOK,EAPLA,MACAR,EAMK,EANLA,eACA0G,EAKK,EALLA,YACAb,EAIK,EAJLA,eACAc,EAGK,EAHLA,cACAH,EAEK,EAFLA,WACAI,EACK,EADLA,cAEMC,EAAmBtC,KAAW,uBAAwB,CAC3D0B,QAASlG,IAGV,OACC,yBAAKkE,UAAW4C,GACf,yBAAK5C,UAAU,gBACd,wBAAIA,UAAU,2BAAd,WACA,yBAAKA,UAAU,iCACbhH,EAAQ,GAAKuD,EAAQ,EACrB,2BACC,4BACCyD,UAAU,8BACVE,QAASuC,GAET,uBAAGzC,UAAU,+BAJd,iBAMA,4BACCA,UAAU,8BACVE,QAAS0B,GAET,uBAAG5B,UAAU,gBAJd,mBAQD,4BACCA,UAAU,8BACVE,QAASwC,GAFV,YAOA1J,EAAQ,GAAKuD,EAAQ,EACrB,6BACC,4BACCyD,UAAU,8BACVE,QAASwC,GAFV,YAMC3G,EACA,4BACCiE,UAAU,kDACVE,QAASyC,GAET,mDACA,uBAAG3C,UAAU,sBAGd,4BACCA,UAAU,kDACVE,QAASyC,GAET,kDACA,uBAAG3C,UAAU,wBAIb,KACJ,kBAAC,GAAD,CAAeuC,WAAYA,KAE5B,uBAAGvC,UAAU,yBAAb,YACQ,IACP,uBACC6C,KAAK,uBACL7C,UAAU,6BACV8C,OAAO,SACPC,IAAI,uBAJL,qBC7EUC,GAhBiC,SAAC,GAG1C,IAFNpB,EAEK,EAFLA,eACAC,EACK,EADLA,WAEA,OACC,yBAAK7B,UAAU,YACL,4BAAQA,UAAU,mBAAmBE,QAAS2B,GAC1C,uBAAG7B,UAAU,gBADjB,SAGA,4BAAQA,UAAU,sBAAsBE,QAAS0B,GAC7C,uBAAG5B,UAAU,gBADjB,YCqBZ,IAgBMiD,GAAa,IACfC,IAAe,EAEbC,G,2MAOLC,WAAa,SAACC,GAAwD,IAEjEjG,EAF2B0F,EAAqC,uDAAf,KAC/CQ,EAAeC,SAAST,EAAOU,QAAQ1I,KAAM,IAG9CoI,KAEFJ,EAAOW,UAAUC,SAAS,gBAC3BJ,IAAiBxM,IAEjBsG,EAAgBkG,GAEjB,EAAKK,kBAAkBN,EAAUjG,GACjC8F,IAAe,EACf9K,OAAOwL,YAAW,WACjBV,IAAe,IACbD,M,EAILU,kBAAoB,SACnBN,GAEW,IADXjG,EACU,uDADc,KAElByG,EAAc,CACnBC,QAAS,EACTC,WAAY,EACZC,UAAW,EACXC,UAAW,EACXC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,QAAS,EACTC,WAAY,EACZC,UAAW,EACXC,UAAW,GAGRZ,EAAYR,IACf,EAAKqB,MAAMC,YAAY,CACtBpF,aAAcsE,EAAYR,GAC1BjG,cAAeA,K,EAKlBwH,iBAAmB,SAACvH,GACnB,EAAKqH,MAAMzF,cAAc5B,I,EAG1BwH,mBAAqB,WACpB,EAAKH,MAAMI,gB,EAGZC,kBAAoB,WACnB,EAAKL,MAAMM,e,EAGZC,iBAAmB,WAClB,EAAKP,MAAMQ,qB,EAGZC,mBAAqB,WACpB,EAAKT,MAAMU,gB,EAGZC,eAAiB,SAACC,GACjB,EAAKZ,MAAMa,SAASD,I,EAGrBE,uBAAyB,WACxB,EAAKd,MAAMe,oB,EAGZC,kBAAoB,WACnB,EAAKhB,MAAMiB,e,EAGZC,UAAY,SAACC,EAAIC,GAChB,EAAK1C,WAAW,UAAW0C,EAAMhD,S,EAGlCiD,YAAc,SAACF,EAAIC,GAClB,EAAK1C,WAAW,YAAa0C,EAAMhD,S,EAGpCkD,YAAc,SAACH,EAAIC,GAClB,EAAK1C,WAAW,YAAa0C,EAAMhD,S,EAGpCmD,aAAe,SAACJ,EAAIC,GACnB,EAAK1C,WAAW,aAAc0C,EAAMhD,S,EAGrCoD,YAAc,SAACC,EAAUL,GACxB,OAAO,G,mFArGa,IAAD,OACnBM,SAASC,iBAAiB,WAAW,SAACP,GACrC,EAAK1C,WAAW0C,EAAMzL,U,+BAuGvB,OACC,2BACC,gBAAC,IAAD,CACCiM,SAAU,aACVC,UAAW,GACXL,YAAa3L,KAAK2L,YAClBN,UAAWrL,KAAKqL,UAAUY,KAAKjM,MAC/BwL,YAAaxL,KAAKwL,YAAYS,KAAKjM,MACnCyL,YAAazL,KAAKyL,YAAYQ,KAAKjM,MACnC0L,aAAc1L,KAAK0L,aAAaO,KAAKjM,OAErC,uBAAKyF,UAAU,aACd,uBAAKA,UAAU,OACd,gBAAC,GAAD,CACCyC,YAAalI,KAAK0K,iBAClBrD,eAAgBrH,KAAKsK,mBACrBnC,cAAenI,KAAKwK,kBACpBxC,WAAYhI,KAAK8K,eACjB1C,cAAepI,KAAKmL,oBAErB,gBAAC,GAAD,MACA,gBAAC,GAAD,CAAOhG,aAAcnF,KAAKqK,mBAC1B,gBAAC,GAAD,CACC/C,WAAYtH,KAAK0K,iBACjBrD,eAAgBrH,KAAKsK,qBAEtB,gBAAC,GAAD,CACCjD,eAAgBrH,KAAKsK,mBACrBhD,WAAYtH,KAAK0K,iBACjBnD,YAAavH,KAAK4K,qBAEnB,gBAAC,GAAD,CAAchD,QAAS5H,KAAKiL,iC,GAzIhBiB,aAkJJtG,eAAQ,MArKI,SAACuG,GAC3B,MAAO,CACN/B,YAAa,SAACgC,GAAD,OACZD,ECXI,SAAqBC,GAC3B,MAAO,CACN7L,KAAM7E,EACNqJ,QAASqH,GDQChC,CAAYgC,KACtB1H,cAAe,SAAC5B,GAAD,OAAgBqJ,ECJzB,CACN5L,KAAM5E,EACNoJ,QDEsDjC,KACtDuJ,kBAAmB,kBAAMF,ECEnB,CACN5L,KAAM3E,KDFN2O,aAAc,kBAAM4B,ECOd,CACN5L,KAAM1E,KDPN4O,YAAa,kBAAM0B,ECYb,CACN5L,KAAMzE,KDZN+O,aAAc,kBAAMsB,ECiBd,CACN5L,KAAMxE,KDjBNiP,SAAU,SAACD,GAAD,OAAqBoB,ECqB1B,SAAkBpB,GACxB,MAAO,CACNxK,KAAMvE,EACN+I,QAASgG,GDxB+BC,CAASD,KACjDJ,kBAAmB,kBAAMwB,EC4BnB,CACN5L,KAAMtE,KD5BNmP,YAAa,kBAAMe,ECiCb,CACN5L,KAAMrE,KDjCNgP,iBAAkB,kBAAMiB,EC4ClB,CACN5L,KAAMnE,QD4GOwJ,CAAkCgD,IEnM3C0D,GAAQC,YAAYC,GAYXC,OAVf,WACC,OACC,6BACC,kBAAC,IAAD,CAAUH,MAAOA,IAChB,kBAAC,GAAD,SCDEI,GAAcC,QACU,cAA7B9O,OAAO+O,SAASC,UAEc,UAA7BhP,OAAO+O,SAASC,UAEhBhP,OAAO+O,SAASC,SAASC,MACxB,2DAsCH,SAASC,GAAgBC,EAAOC,GAC/BtM,UAAUuM,cACRC,SAASH,GACTI,MAAK,SAACC,GACNA,EAAaC,cAAgB,WAC5B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACD,cAA3BF,EAAiB3O,QAChB+B,UAAUuM,cAAcQ,YAI3BC,QAAQC,IACP,iHAKGX,GAAUA,EAAOY,UACpBZ,EAAOY,SAASR,KAMjBM,QAAQC,IAAI,sCAGRX,GAAUA,EAAOa,WACpBb,EAAOa,UAAUT,WAOtBU,OAAM,SAACC,GACPL,QAAQK,MAAM,4CAA6CA,MC1F9DC,IAASC,OAAO,kBAAC,GAAD,MAASrC,SAASsC,eAAe,SDgB1C,SAAkBlB,GACxB,GAA6C,kBAAmBtM,UAAW,CAG1E,GADkB,IAAIyN,IAAIC,WAAwBxQ,OAAO+O,SAAStE,MACpDgG,SAAWzQ,OAAO+O,SAAS0B,OAIxC,OAGDzQ,OAAOiO,iBAAiB,QAAQ,WAC/B,IAAMkB,EAAK,UAAMqB,WAAN,sBAEP3B,KAgEP,SAAiCM,EAAOC,GAEvCsB,MAAMvB,EAAO,CACZwB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAACqB,GAEN,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEpB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ClO,UAAUuM,cAAc4B,MAAM1B,MAAK,SAACC,GACnCA,EAAa0B,aAAa3B,MAAK,WAC9BvP,OAAO+O,SAASoC,eAKlBjC,GAAgBC,EAAOC,MAGxBc,OAAM,WACNJ,QAAQC,IACP,oEAvFAqB,CAAwBjC,EAAOC,GAI/BtM,UAAUuM,cAAc4B,MAAM1B,MAAK,WAClCO,QAAQC,IACP,iHAMFb,GAAgBC,EAAOC,OCvC3BC,K","file":"static/js/main.9814edd1.chunk.js","sourcesContent":["export const UPDATE_CELLS = \"UPDATE_CELLS\";\nexport const SET_ACTIVE_TYPE = \"SET_ACTIVE_TYPE\";\nexport const RESTART_CSS_CLASSES = \"RESTART_CSS_CLASSES\";\nexport const RESTART_LEVEL = \"RESTART_LEVEL\";\nexport const RESTART_GAME = \"RESTART_GAME\";\nexport const SET_NEXT_LEVEL = \"SET_NEXT_LEVEL\";\nexport const SET_LEVEL = \"SET_LEVEL\";\nexport const TOGGLE_MENU_OVERLAY = \"TOGGLE_MENU_OVERLAY\";\nexport const TOGGLE_HINTS = \"TOGGLE_HINTS\";\nexport const SHOW_HINTS_OVERLAY = \"SHOW_HINTS_OVERLAY\";\nexport const HIDE_HINTS_OVERLAY = \"HIDE_HINTS_OVERLAY\";\n","export const BOARD_WIDTH = 7;\nexport const BOARD_HEIGHT = 7;\nexport const WALL_TYPE = 100;\nexport const TILE_TYPES = {\n\t1: \"primary\",\n\t2: \"secondary\",\n\t3: \"tertiary\",\n\t4: \"quaternary\",\n\t100: \"wall\",\n};\n","import { BOARD_WIDTH, BOARD_HEIGHT } from \"../misc/constants\";\nimport { Cell, CellState } from \"../misc/tsTypes\";\n\n/*\n  This method transforms the 1dim array of visible tiles into 2dim array of both visible and empty\n  tiles to easier calculate the collision and movement of the grid elements\n*/\nexport function transformFromStateToGrid(cells: Cell[]): Cell[][] {\n\tlet grid = [],\n\t\ttile,\n\t\ttilesNo = cells.length;\n\n\tfor (let x = 0; x < BOARD_WIDTH; x++) {\n\t\tlet row = (grid[x] = []);\n\n\t\tfor (let y = 0; y < BOARD_HEIGHT; y++) {\n\t\t\trow.push(null);\n\t\t}\n\t}\n\n\tfor (let x = 0; x < tilesNo; x++) {\n\t\ttile = cells[x];\n\t\tgrid[tile.positionX][tile.positionY] = tile;\n\t}\n\n\treturn grid;\n}\n\n/*\n  This method transforms the 2dim array of of both visible and empty\n  tiles into 1dim array of only visible tiles to store it as a state and properly show the movement in DOM\n*/\nexport function transformFromGridToState(grid: Cell[][]): Cell[] {\n\tlet cells = [];\n\n\tfor (let x = 0; x < BOARD_WIDTH; x++) {\n\t\tfor (let y = 0; y < BOARD_HEIGHT; y++) {\n\t\t\tif (grid[x][y]) {\n\t\t\t\tcells.push(grid[x][y]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn cells;\n}\n\nexport function factorial(n) {\n\tif (n === 0) {\n\t\treturn 1;\n\t} else {\n\t\treturn n * factorial(n - 1);\n\t}\n}\n\nexport function isMobile() {\n\tif (\n\t\t/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n\t\t\tnavigator.userAgent\n\t\t)\n\t) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nStorage.prototype.setObject = function (key, obj) {\n\treturn this.setItem(key, JSON.stringify(obj));\n};\n\nStorage.prototype.getObject = function (key) {\n\treturn JSON.parse(this.getItem(key));\n};\n\nexport function setMaxScores(state: CellState): void {\n\tconst localStorage = window.localStorage;\n\n\tlocalStorage.setObject(\"swipers_game--best_scores\", state.maxScores);\n}\n\nexport function getMaxScores(): Array<number> {\n\tconst localStorage = window.localStorage;\n\tlet emptyBestScores: Array<number> = new Array(9).fill(0);\n\n\tlet bestScores = localStorage.getObject(\"swipers_game--best_scores\");\n\n\treturn typeof bestScores === \"undefined\" ||\n\t\tbestScores === null ||\n\t\tbestScores.length === 0\n\t\t? emptyBestScores\n\t\t: bestScores;\n}\n\nexport function setStarScores(state: CellState): void {\n\tconst localStorage = window.localStorage;\n\n\tlocalStorage.setObject(\"swipers_game--star_scores\", state.starScores);\n}\n\nexport function getStarScores(): Array<number> {\n\tconst localStorage = window.localStorage;\n\tlet emptyStarScores: Array<number> = new Array(9).fill(0);\n\n\tlet starScores = localStorage.getObject(\"swipers_game--star_scores\");\n\n\treturn typeof starScores === \"undefined\" ||\n\t\tstarScores === null ||\n\t\tstarScores.length === 0\n\t\t? emptyStarScores\n\t\t: starScores;\n}\n\nexport function setHintsVisibility(isHintsVisible: boolean): void {\n\tconst localStorage = window.localStorage;\n\n\tlocalStorage.setObject(\"swipers_game--hints-visibility\", isHintsVisible);\n}\n\nexport function getHintsVisibility(): boolean {\n\tconst localStorage = window.localStorage;\n\tlet initialHintsVisibility: boolean = true;\n\n\tlet hintsVisibility = localStorage.getObject(\n\t\t\"swipers_game--hints-visibility\"\n\t);\n\n\treturn typeof hintsVisibility === \"undefined\" || hintsVisibility === null\n\t\t? initialHintsVisibility\n\t\t: hintsVisibility;\n}\n\nexport function getLastLevelPlayed(initialLevel: number): number {\n\tconst localStorage = window.localStorage;\n\n\tlet lastLevelPlayed = localStorage.getObject(\n\t\t\"swipers_game--last_level_played\"\n\t);\n\n\treturn typeof lastLevelPlayed === \"undefined\" || lastLevelPlayed === null\n\t\t? initialLevel\n\t\t: lastLevelPlayed;\n}\n\nexport function setLastLevelPlayed(level: number): void {\n\tconst localStorage = window.localStorage;\n\n\tlocalStorage.setObject(\"swipers_game--last_level_played\", level);\n}\n","import {\n\ttransformFromStateToGrid,\n\ttransformFromGridToState,\n\tfactorial,\n} from \"../misc/utils\";\n\nimport { Cell, CellState } from \"../misc/tsTypes\";\n\nexport function resetCssClasses(state: CellState): Cell[] {\n\tlet cellsInGrid = transformFromStateToGrid(state.levelData.cells);\n\t//remove 'merged' css class from the finish tiles\n\tstate.levelData.finishCords.forEach((finishCoordinates) => {\n\t\tcellsInGrid[finishCoordinates.positionX][\n\t\t\tfinishCoordinates.positionY\n\t\t].actionClass = \"\";\n\t});\n\n\treturn transformFromGridToState(cellsInGrid);\n}\n\nexport function updateScore(state: CellState, mergedCounter: number): void {\n\tconst singleScore = factorial(mergedCounter) * mergedCounter * 10;\n\n\tstate.levelData.singleScore = singleScore;\n\tstate.levelData.score += singleScore;\n\tstate.levelData.scoreClass = \"score-up\";\n\n\tif (state.levelData.score > state.maxScores[state.levelData.level]) {\n\t\tstate.maxScores[state.levelData.level] = state.levelData.score;\n\t\tstate.levelData.isNewBestScore = true;\n\t}\n}\n\nexport function calculateStarScore(state: CellState): number {\n\tlet starScore = 1; //if you manage to finish the level, get at least one star\n\n\tif (\n\t\tstate.levelData.moves <= state.levelData.stars.maxMoves &&\n\t\t(!state.levelData.stars.maxPoints ||\n\t\t\tstate.levelData.score === state.levelData.stars.maxPoints)\n\t) {\n\t\tstarScore = 3;\n\t} else if (\n\t\t(state.levelData.moves <= state.levelData.stars.maxMoves &&\n\t\t\tstate.levelData.stars.maxPoints &&\n\t\t\tstate.levelData.score !== state.levelData.stars.maxPoints) ||\n\t\tstate.levelData.moves <= state.levelData.stars.minMoves\n\t) {\n\t\tstarScore = 2;\n\t}\n\n\treturn starScore;\n}\n","import { WALL_TYPE } from \"../misc/constants\";\nimport { tileInLevel } from \"../misc/tsTypes\";\nimport { isMobile } from \"../misc/utils\";\n\nconst firstLevelHint = isMobile()\n\t? `Swipe up, down or sideways\nto move the blue circle \nto the square finish tile.`\n\t: `Use the arrow keys (or WASD)\nto move the blue circle \nto the square finish tile.`;\n\nexport const LEVELS: tileInLevel[][] = [\n\t//level 1\n\t[\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 0,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\thint: firstLevelHint,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 2, //how many moves are needed to get maximum 3 stars\n\t\t\t\tminMoves: 3, //how many moves are needed to get 2 stars\n\t\t\t\tmaxPoints: 0, //how many points are needed to get maximum 3 stars, if 0 - it doesn't matter, only moves count\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 5,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//level 2\n\t[\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 6,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\thint: `You will get more points \n\t\t\t\t\tif all of the blue circles reach\n\t\t\t\t\tthe finish tile in the same move.`,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 2,\n\t\t\t\tminMoves: 4,\n\t\t\t\tmaxPoints: 40,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 3,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//level 3\n\t[\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 6,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\thint: `Select a different colored tile \n\t\t\t\tto change active color.`,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 4,\n\t\t\t\tminMoves: 6,\n\t\t\t\tmaxPoints: 0,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 0,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 6,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 0,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//level 4\n\t[\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 6,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\thint: `Use inactive tiles as walls.`,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 6,\n\t\t\t\tminMoves: 8,\n\t\t\t\tmaxPoints: 0,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 0,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 4,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 0,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 6,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//old level 4\n\t// [\n\t// \t{\n\t// \t\tpositionX: 3,\n\t// \t\tpositionY: 4,\n\t// \t\ttype: 1,\n\t// \t\tisFinishTile: true,\n\t// \t\tstars: {\n\t// \t\t\tmaxMoves: 18,\n\t// \t\t\tminMoves: 20,\n\t// \t\t}\n\t// \t},\n\t// \t{\n\t// \t\tpositionX: 0,\n\t// \t\tpositionY: 0,\n\t// \t\ttype: 1,\n\t// \t\tisFinishTile: false,\n\t// \t},\n\t// \t{\n\t// \t\tpositionX: 2,\n\t// \t\tpositionY: 2,\n\t// \t\ttype: 2,\n\t// \t\tisFinishTile: true,\n\t// \t},\n\t// \t{\n\t// \t\tpositionX: 1,\n\t// \t\tpositionY: 0,\n\t// \t\ttype: 2,\n\t// \t\tisFinishTile: false,\n\t// \t},\n\t// \t{\n\t// \t\tpositionX: 4,\n\t// \t\tpositionY: 5,\n\t// \t\ttype: WALL_TYPE,\n\t// \t\tisFinishTile: false,\n\t// \t},\n\t// \t{\n\t// \t\tpositionX: 3,\n\t// \t\tpositionY: 3,\n\t// \t\ttype: WALL_TYPE,\n\t// \t\tisFinishTile: false,\n\t// \t},\n\t// ],\n\t//level 5\n\t[\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 1,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 7,\n\t\t\t\tminMoves: 9,\n\t\t\t\tmaxPoints: 80,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 3,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 4,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 5,\n\t\t\tpositionY: 6,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 4,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 2,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 2,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 1,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 0,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 5,\n\t\t\tpositionY: 0,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 1,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//level 6\n\t[\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 1,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 8,\n\t\t\t\tminMoves: 10,\n\t\t\t\tmaxPoints: 60,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 3,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 4,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 2,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 0,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 2,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 6,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: true,\n\t\t},\n\t],\n\t//level 7\n\t[\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 0,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 10,\n\t\t\t\tminMoves: 11,\n\t\t\t\tmaxPoints: 0,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 4,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 0,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 5,\n\t\t\tpositionY: 4,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 5,\n\t\t\tpositionY: 0,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 4,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 1,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 1,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//level 8\n\t[\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 0,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 12,\n\t\t\t\tminMoves: 14,\n\t\t\t\tmaxPoints: 100,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 1,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 4,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 6,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 5,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 2,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 0,\n\t\t\tpositionY: 0,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 1,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 6,\n\t\t\ttype: 4,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 5,\n\t\t\ttype: 4,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n\t//level 9\n\t[\n\t\t{\n\t\t\tpositionX: 5,\n\t\t\tpositionY: 1,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: true,\n\t\t\tstars: {\n\t\t\t\tmaxMoves: 16,\n\t\t\t\tminMoves: 18,\n\t\t\t\tmaxPoints: 0,\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 5,\n\t\t\ttype: 1,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 1,\n\t\t\tpositionY: 5,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 6,\n\t\t\ttype: 2,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 2,\n\t\t\tpositionY: 1,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 5,\n\t\t\tpositionY: 4,\n\t\t\ttype: 3,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 4,\n\t\t\tpositionY: 3,\n\t\t\ttype: 4,\n\t\t\tisFinishTile: true,\n\t\t},\n\t\t{\n\t\t\tpositionX: 3,\n\t\t\tpositionY: 2,\n\t\t\ttype: 4,\n\t\t\tisFinishTile: false,\n\t\t},\n\t\t{\n\t\t\tpositionX: 6,\n\t\t\tpositionY: 0,\n\t\t\ttype: WALL_TYPE,\n\t\t\tisFinishTile: false,\n\t\t},\n\t],\n];\n","import {\n\tUPDATE_CELLS,\n\tSET_ACTIVE_TYPE,\n\tRESTART_CSS_CLASSES,\n\tRESTART_LEVEL,\n\tRESTART_GAME,\n\tSET_NEXT_LEVEL,\n\tSET_LEVEL,\n\tTOGGLE_MENU_OVERLAY,\n\tTOGGLE_HINTS,\n\tSHOW_HINTS_OVERLAY,\n\tHIDE_HINTS_OVERLAY,\n} from \"../actions/actionTypes\";\nimport { BOARD_WIDTH, BOARD_HEIGHT, WALL_TYPE } from \"../misc/constants\";\nimport {\n\ttransformFromStateToGrid,\n\ttransformFromGridToState,\n\tgetMaxScores,\n\tgetStarScores,\n\tgetLastLevelPlayed,\n\tgetHintsVisibility,\n\tsetMaxScores,\n\tsetStarScores,\n\tsetLastLevelPlayed,\n\tsetHintsVisibility,\n} from \"../misc/utils\";\nimport {\n\tresetCssClasses,\n\tupdateScore,\n\tcalculateStarScore,\n} from \"../misc/helpers\";\nimport {\n\tCell,\n\tCellState,\n\tLevelData,\n\tFinishCords,\n\tRootReducerAction,\n} from \"../misc/tsTypes\";\nimport { LEVELS } from \"../misc/levels\";\n\nconst INITIAL_LEVEL = 0;\nconst lastLevelPlayed = getLastLevelPlayed(INITIAL_LEVEL);\n\ninterface Vector {\n\tx: number;\n\ty: number;\n}\n\ninterface Traversals {\n\tx: number[];\n\ty: number[];\n}\n\nfunction initializeState(level: number = 0): CellState {\n\treturn {\n\t\tlevelData: initializeLevel(level),\n\t\tmaxScores: getMaxScores(), //an array with the best scores for every level\n\t\tstarScores: getStarScores(), //an array with the best star scores for every level\n\t\tlevelsAmount: LEVELS.length,\n\t\tisMenuVisible: true,\n\t\tisHintsVisible: getHintsVisibility(),\n\t\tisHintsOverlayVisible: false,\n\t};\n}\n\nfunction initializeLevel(level: number = 0): LevelData {\n\treturn {\n\t\tlevel: level,\n\t\tcells: initializeCells(level),\n\t\tfinishCords: setFinishCords(level),\n\t\tactiveType: 1,\n\t\tnonStandardTilesAmount: countTiles(level), //counter of nonstandard tiles, needed to calc if lvl is finished\n\t\thint: setHint(level),\n\t\tstars: LEVELS[level][0].stars, //an object that indicates how many moves are neeed to get 1, 2 or 3 stars\n\t\tscore: 0,\n\t\tsingleScore: 0,\n\t\tscoreClass: \"\",\n\t\tisNewBestScore: false,\n\t\tmoves: 0,\n\t\tisLevelFinished: false,\n\t\tisGameFinished: false,\n\t};\n}\n\n// Build a grid based on the current level\nfunction initializeCells(level: number = 0): Cell[] {\n\tlet cells = [],\n\t\tnewTile,\n\t\tcurrentLevel = LEVELS[level],\n\t\tuniqueKey = 0;\n\n\tcurrentLevel.forEach((tile) => {\n\t\tnewTile = {\n\t\t\t...tile,\n\t\t\tuniqueKey: uniqueKey,\n\t\t\ttileFoundInNextCell: false,\n\t\t\tactionClass: \"\",\n\t\t};\n\t\tuniqueKey++;\n\t\tcells.push(newTile);\n\t});\n\n\treturn cells;\n}\n\nfunction setFinishCords(level: number = 0): Array<FinishCords> {\n\tlet finishCords = [],\n\t\tcurrentLevel = LEVELS[level];\n\n\tcurrentLevel.forEach((tile) => {\n\t\tif (tile.isFinishTile) {\n\t\t\tlet coordinate = {\n\t\t\t\tpositionX: tile.positionX,\n\t\t\t\tpositionY: tile.positionY,\n\t\t\t};\n\t\t\tfinishCords.push(coordinate);\n\t\t}\n\t});\n\n\treturn finishCords;\n}\n\nfunction countTiles(level: number = 0): number {\n\tlet currentLevel = LEVELS[level];\n\n\tlet tilesAmount = currentLevel.reduce(function (accumulator, currentValue) {\n\t\tif (currentValue.isFinishTile || currentValue.type === WALL_TYPE) {\n\t\t\treturn accumulator + 1;\n\t\t} else {\n\t\t\treturn accumulator;\n\t\t}\n\t}, 0);\n\n\treturn tilesAmount;\n}\n\nfunction setHint(level: number = 0): string {\n\tlet hint = \"\",\n\t\tcurrentLevel = LEVELS[level];\n\n\tcurrentLevel.forEach((tile) => {\n\t\tif (tile.hint) {\n\t\t\thint = tile.hint;\n\t\t\treturn;\n\t\t}\n\t});\n\n\treturn hint;\n}\n\nfunction moveTiles(\n\tmove: number,\n\tstate: CellState,\n\tnewActiveType: number | null\n): Cell[] {\n\t//menu overlays the board so don't allow to move tiles unless menu is closed\n\tif (state.isMenuVisible) {\n\t\treturn state.levelData.cells;\n\t}\n\n\tlet cell: Cell,\n\t\tnewPosition: Cell,\n\t\tactiveType = newActiveType ? newActiveType : state.levelData.activeType,\n\t\tavailableCells = removeMergedCells(state.levelData.cells),\n\t\tcellsInGrid = transformFromStateToGrid(availableCells),\n\t\tcellsAmount =\n\t\t\tavailableCells.length - state.levelData.nonStandardTilesAmount,\n\t\tmergedCounter: number = 0,\n\t\talreadyMovedTile: boolean = false,\n\t\tisCellMergable: boolean = false,\n\t\tisCellMovable: boolean = false;\n\n\tconst traversals = buildTraversals(move),\n\t\tmoveVector = getMoveVector(move);\n\n\t//close hints overlay if still open\n\tif (state.isHintsOverlayVisible) {\n\t\tstate.isHintsOverlayVisible = false;\n\t}\n\n\tresetCssClasses(state);\n\n\t//Traverse the grid in the right direction and move tiles\n\ttraversals.x.forEach((x) => {\n\t\ttraversals.y.forEach((y) => {\n\t\t\tcell = cellsInGrid[x][y];\n\t\t\tif (cell && cell.type === activeType && !cell.isFinishTile) {\n\t\t\t\tnewPosition = findAvailablePosition(cell, cellsInGrid, moveVector);\n\t\t\t\tif (\n\t\t\t\t\tnewPosition.nextTile &&\n\t\t\t\t\t((newPosition.nextTile.isFinishTile &&\n\t\t\t\t\t\tnewPosition.nextTile.type === cell.type) ||\n\t\t\t\t\t\tnewPosition.nextTile.toBeMergedWithFinish)\n\t\t\t\t) {\n\t\t\t\t\tisCellMergable = true;\n\t\t\t\t\t//add merge class to the finish tile\n\t\t\t\t\tif (\n\t\t\t\t\t\tnewPosition.nextTile.isFinishTile &&\n\t\t\t\t\t\tnewPosition.nextTile.type === cell.type\n\t\t\t\t\t) {\n\t\t\t\t\t\tnewPosition.nextTile.actionClass = \"merged\";\n\t\t\t\t\t}\n\n\t\t\t\t\t//animate the movement with fading\n\t\t\t\t\tif (newPosition.toBeMergedWithFinish) {\n\t\t\t\t\t\tnewPosition.actionClass = \"removed\";\n\t\t\t\t\t}\n\n\t\t\t\t\tmergedCounter++;\n\t\t\t\t\tcellsAmount--;\n\t\t\t\t}\n\t\t\t\tisCellMovable = moveCell(cellsInGrid, newPosition, cell);\n\n\t\t\t\tif ((isCellMovable || isCellMergable) && !alreadyMovedTile) {\n\t\t\t\t\tstate.levelData.moves++;\n\t\t\t\t\talreadyMovedTile = true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\n\tif (!mergedCounter) {\n\t\tstate.levelData.scoreClass = \"\";\n\t} else {\n\t\tupdateScore(state, mergedCounter);\n\t}\n\n\tif (cellsAmount === 0) {\n\t\tstate.levelData.isLevelFinished = true;\n\t\tstate.starScores[state.levelData.level] = calculateStarScore(state);\n\n\t\tsetMaxScores(state);\n\t\tsetStarScores(state);\n\n\t\tif (state.levelData.level === state.levelsAmount - 1) {\n\t\t\tstate.levelData.isGameFinished = true;\n\t\t}\n\t}\n\n\treturn transformFromGridToState(cellsInGrid);\n}\n\nfunction removeMergedCells(cells: Cell[]): Cell[] {\n\tlet filteredCells: Cell[];\n\n\tfilteredCells = cells.filter((cell) => !cell.toBeMergedWithFinish);\n\n\treturn filteredCells;\n}\n\nfunction moveCell(cells: Cell[][], newPosition: Cell, prevPosition: Cell) {\n\tlet isCellMovable: boolean = false;\n\n\tif (\n\t\tnewPosition.positionX !== prevPosition.positionX ||\n\t\tnewPosition.positionY !== prevPosition.positionY\n\t) {\n\t\tcells[newPosition.positionX][newPosition.positionY] = newPosition;\n\t\tcells[prevPosition.positionX][prevPosition.positionY] = null;\n\n\t\tisCellMovable = true;\n\t}\n\n\treturn isCellMovable;\n}\n\nfunction getMoveVector(move: number): Vector {\n\t// Vectors representing tile movement\n\tconst map = {\n\t\t1: { x: 0, y: -1 }, // Up\n\t\t2: { x: 1, y: 0 }, // Right\n\t\t3: { x: 0, y: 1 }, // Down\n\t\t4: { x: -1, y: 0 }, // Left\n\t};\n\n\treturn map[move];\n}\n\n// strongly inspired by https://github.com/gabrielecirulli/2048/blob/ac03b1f01628038039b74b67f2e284b233bd143e/js/game_manager.js#L207\nfunction buildTraversals(move: number): Traversals {\n\tlet traversals = {\n\t\tx: [],\n\t\ty: [],\n\t};\n\n\tfor (let pos = 0; pos < BOARD_WIDTH; pos++) {\n\t\ttraversals.x.push(pos);\n\t\ttraversals.y.push(pos);\n\t}\n\n\t// Always traverse from the farthest cell in the chosen direction\n\t// when moving right or down, reverse the natural order\n\tif (move === 2) traversals.x = traversals.x.reverse();\n\tif (move === 3) traversals.y = traversals.y.reverse();\n\n\treturn traversals;\n}\n\nfunction findAvailablePosition(\n\tcell: Cell,\n\tcells: Cell[][],\n\tmoveVector: Vector\n): Cell {\n\tlet prevCell, tileFoundInNextCell, cellX, cellY, toBeMergedWithFinish;\n\n\t// Progress towards the move direction until an obstacle is found\n\tdo {\n\t\tprevCell = cell;\n\t\tcellX = cell.positionX + moveVector.x;\n\t\tcellY = cell.positionY + moveVector.y;\n\t\ttileFoundInNextCell = tileInCell(cells, cellX, cellY);\n\t\ttoBeMergedWithFinish =\n\t\t\ttileFoundInNextCell &&\n\t\t\t((tileFoundInNextCell.isFinishTile &&\n\t\t\t\ttileFoundInNextCell.type === cell.type) ||\n\t\t\t\ttileFoundInNextCell.toBeMergedWithFinish);\n\t\tcell = {\n\t\t\tpositionX: cellX,\n\t\t\tpositionY: cellY,\n\t\t\ttype: cell.type,\n\t\t\tisFinishTile: cell.isFinishTile,\n\t\t\tuniqueKey: cell.uniqueKey,\n\t\t\tactionClass: \"\",\n\t\t\tnextTile: tileFoundInNextCell, //need nextTile to animate the position to equal finish\n\t\t\ttoBeMergedWithFinish: toBeMergedWithFinish,\n\t\t};\n\t} while (withinBounds(cell) && !tileFoundInNextCell);\n\n\t//even if not moving, I have to check if cell is going to be merged\n\tprevCell.nextTile = tileFoundInNextCell;\n\tprevCell.toBeMergedWithFinish = toBeMergedWithFinish;\n\treturn prevCell;\n}\n\nfunction withinBounds(cell: Cell): boolean {\n\treturn (\n\t\tcell.positionX >= 0 &&\n\t\tcell.positionX < BOARD_WIDTH &&\n\t\tcell.positionY >= 0 &&\n\t\tcell.positionY < BOARD_HEIGHT\n\t);\n}\n\n// returns content (tile) of a particular cell or null if tile not found\nfunction tileInCell(\n\tcells: Cell[][],\n\tcellX: number,\n\tcellY: number\n): Cell | null {\n\tif (cells[cellX] && cells[cellX][cellY]) {\n\t\treturn cells[cellX][cellY];\n\t} else {\n\t\treturn null;\n\t}\n}\n\nfunction setActiveType(cell: Cell, activeType: number): number {\n\treturn cell.type !== WALL_TYPE ? cell.type : activeType;\n}\n\nfunction toogleHintsAvailable(state: CellState): CellState {\n\tconst newState = {\n\t\t...state,\n\t\tisHintsVisible: !state.isHintsVisible,\n\t};\n\n\tsetHintsVisibility(!state.isHintsVisible);\n\n\treturn newState;\n}\n\nconst rootReducer = (\n\tstate = initializeState(lastLevelPlayed),\n\taction: RootReducerAction\n): CellState => {\n\tlet newState;\n\n\tswitch (action.type) {\n\t\tcase UPDATE_CELLS:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: {\n\t\t\t\t\t...state.levelData,\n\t\t\t\t\tactiveType: action.payload.newActiveType\n\t\t\t\t\t\t? action.payload.newActiveType\n\t\t\t\t\t\t: state.levelData.activeType,\n\t\t\t\t\tcells: moveTiles(\n\t\t\t\t\t\taction.payload.keyPressedNo,\n\t\t\t\t\t\tstate,\n\t\t\t\t\t\taction.payload.newActiveType\n\t\t\t\t\t),\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase SET_ACTIVE_TYPE:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: {\n\t\t\t\t\t...state.levelData,\n\t\t\t\t\tactiveType: setActiveType(action.payload, state.levelData.activeType),\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase RESTART_CSS_CLASSES:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: {\n\t\t\t\t\t...state.levelData,\n\t\t\t\t\tcells: resetCssClasses(state),\n\t\t\t\t\tscoreClass: \"\",\n\t\t\t\t},\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase RESTART_LEVEL:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: initializeLevel(state.levelData.level),\n\t\t\t\tisMenuVisible: false,\n\t\t\t\tisHintsOverlayVisible: true,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase RESTART_GAME:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: initializeLevel(INITIAL_LEVEL),\n\t\t\t\tisMenuVisible: false,\n\t\t\t\tisHintsOverlayVisible: true,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase SET_NEXT_LEVEL:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: initializeLevel(state.levelData.level + 1),\n\t\t\t\tisHintsOverlayVisible: true,\n\t\t\t};\n\t\t\tsetLastLevelPlayed(state.levelData.level + 1);\n\t\t\treturn newState;\n\t\tcase SET_LEVEL:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: initializeLevel(action.payload),\n\t\t\t\tisMenuVisible: false,\n\t\t\t\tisHintsOverlayVisible: true,\n\t\t\t};\n\t\t\tsetLastLevelPlayed(action.payload);\n\t\t\treturn newState;\n\t\tcase TOGGLE_MENU_OVERLAY:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tlevelData: { ...state.levelData, isLevelFinished: false },\n\t\t\t\tstarScores: getStarScores(),\n\t\t\t\tisMenuVisible: !state.isMenuVisible,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase TOGGLE_HINTS:\n\t\t\tnewState = toogleHintsAvailable(state);\n\t\t\treturn newState;\n\t\tcase SHOW_HINTS_OVERLAY:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tisHintsOverlayVisible: true,\n\t\t\t};\n\t\t\treturn newState;\n\t\tcase HIDE_HINTS_OVERLAY:\n\t\t\tnewState = {\n\t\t\t\t...state,\n\t\t\t\tisHintsOverlayVisible: false,\n\t\t\t};\n\t\t\treturn newState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default rootReducer;\n","import React, { useState, useEffect } from \"react\";\nimport { Cell } from \"../misc/tsTypes\";\n\ninterface Props {\n\ttileClassName: string;\n\tcell: Cell;\n\tonMouseClick: (cell: Cell) => void;\n}\n\nconst Tile: React.FunctionComponent<Props> = ({\n\ttileClassName,\n\tcell,\n\tonMouseClick,\n}) => {\n\tconst [newTileClassName, setData] = useState<Props[\"tileClassName\"] | null>(\n\t\tnull\n\t);\n\n\tuseEffect(() => {\n\t\trequestAnimationFrame(() => {\n\t\t\tsetData(tileClassName);\n\t\t});\n\t}, [tileClassName]);\n\n\treturn (\n\t\t<div\n\t\t\tclassName={newTileClassName}\n\t\t\tdata-type={cell.type}\n\t\t\tonClick={() => onMouseClick(cell)}\n\t\t/>\n\t);\n};\n\nexport default Tile;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { TILE_TYPES } from \"../misc/constants\";\nimport Tile from \"./Tile\";\nimport { Cell, FinishCords } from \"../misc/tsTypes\";\n\ninterface Props {\n\tcells: Cell[];\n\tfinishCords: Array<FinishCords>;\n\tactiveType: number;\n\tonMouseClick: (cell: Cell) => void;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcells: state.levelData.cells,\n\t\tfinishCords: state.levelData.finishCords,\n\t\tactiveType: state.levelData.activeType,\n\t};\n};\n\nconst Board: React.FunctionComponent<Props> = ({\n\tcells,\n\tfinishCords,\n\tactiveType,\n\tonMouseClick,\n}) => {\n\tconst activeFinishCords = finishCords[activeType - 1], //get only finish cords of active type, not the whole array\n\t\tboardClassName = classNames(\"game\", TILE_TYPES[activeType]);\n\tlet tiles = [];\n\n\tcells.forEach((cell, i) => {\n\t\tconst typeClass = \"tile-type-\" + TILE_TYPES[cell.type],\n\t\t\tpositionClass = \"tile-position-\" + cell.positionX + \"-\" + cell.positionY,\n\t\t\tpositionClassFinish =\n\t\t\t\t\"tile-position-\" +\n\t\t\t\tactiveFinishCords.positionX +\n\t\t\t\t\"-\" +\n\t\t\t\tactiveFinishCords.positionY,\n\t\t\tactionClass = \"tile-action-\" + cell.actionClass,\n\t\t\tisTileActive = activeType === cell.type,\n\t\t\tisTileFinish = cell.isFinishTile,\n\t\t\ttileClassName = classNames(\n\t\t\t\t\"tile\",\n\t\t\t\ttypeClass,\n\t\t\t\t{ \"tile-type-finish\": isTileFinish },\n\t\t\t\tcell.toBeMergedWithFinish ? positionClassFinish : positionClass,\n\t\t\t\tactionClass,\n\t\t\t\t{ \"tile-active\": isTileActive }\n\t\t\t),\n\t\t\ttile = (\n\t\t\t\t<Tile\n\t\t\t\t\ttileClassName={tileClassName}\n\t\t\t\t\tcell={cell}\n\t\t\t\t\tonMouseClick={onMouseClick}\n\t\t\t\t\tkey={cell.uniqueKey.toString()}\n\t\t\t\t/>\n\t\t\t);\n\n\t\ttiles.push(tile);\n\t});\n\n\treturn (\n\t\t<div className={boardClassName}>\n\t\t\t<div className=\"grid\"></div>\n\t\t\t<div className=\"board\">{tiles}</div>\n\t\t</div>\n\t);\n};\n\nexport default connect(mapStateToProps)(Board);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { TILE_TYPES } from \"../misc/constants\";\n\ninterface Props {\n\tscore: number;\n\tsingleScore: number;\n\tmaxScores: number;\n\tlevel: number;\n\tmoves: number;\n\tactiveType: number;\n\tscoreClass: string;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tscore: state.levelData.score,\n\t\tsingleScore: state.levelData.singleScore,\n\t\tmaxScores: state.maxScores,\n\t\tlevel: state.levelData.level,\n\t\tmoves: state.levelData.moves,\n\t\tactiveType: state.levelData.activeType,\n\t\tscoreClass: state.levelData.scoreClass,\n\t};\n};\n\nconst Header: React.FunctionComponent<Props> = ({\n\tscore,\n\tsingleScore,\n\tmaxScores,\n\tlevel,\n\tmoves,\n\tactiveType,\n\tscoreClass,\n}) => {\n\tconst logoClass = classNames(\"logo\", \"logo-\" + TILE_TYPES[activeType]),\n\t\tsingleScoreClassName = classNames(\"header__single-score\", scoreClass),\n\t\tsingleScoreValue = \"+\" + singleScore,\n\t\tbestScore = maxScores[level],\n\t\tlevelToShow = level + 1;\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<h1 className={logoClass}>Swipers</h1>\n\t\t\t<div className=\"header__score-wrapper\">\n\t\t\t\t<div className=\"header__score-unit\">\n\t\t\t\t\t<p className=\"header__score-subheader header__score\">Level</p>\n\t\t\t\t\t<p className=\"header__score\">{levelToShow}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__score-unit\">\n\t\t\t\t\t<p className=\"header__score-subheader header__score\">Moves</p>\n\t\t\t\t\t<p className=\"header__score\">{moves}</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__score-unit\">\n\t\t\t\t\t<p className=\"header__score-subheader header__score\">Score</p>\n\t\t\t\t\t<p className=\"header__score\">{score}</p>\n\t\t\t\t\t<span className={singleScoreClassName}>{singleScoreValue}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"header__score-unit\">\n\t\t\t\t\t<p className=\"header__score-subheader header__score\">Best</p>\n\t\t\t\t\t<p className=\"header__score\">{bestScore}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from \"react\";\n\ninterface Props {\n\tscore: number;\n    level: number;\n    customCssClass?: string | null;\n}\n\nconst StarsPoints: React.FunctionComponent<Props> = ({\n\tscore,\n    level,\n    customCssClass,\n}) => {\n\tlet i = 0,\n\t\ttotalStarsAmount = 3,\n\t\tuniqueKey = \"\",\n\t\tstars = [];\n\n\tfor (i = 1; i <= totalStarsAmount; i++) {\n\t\tuniqueKey = `star_${level}_${i}`;\n\t\tif (i <= score) {\n\t\t\tstars.push(<i className=\"fas fa-star\" key={uniqueKey}></i>);\n\t\t} else {\n\t\t\tstars.push(<i className=\"far fa-star\" key={uniqueKey}></i>);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className={customCssClass}>\n            {stars}\n\t\t</div>\n\t);\n};\n\nexport default StarsPoints;\n","import React from \"react\";\n\ninterface Props {\n\toverlayClass: string;\n    overlayWrapperClass: string;\n    title: JSX.Element[] | JSX.Element | string;\n    text: JSX.Element[] | JSX.Element | string;\n    buttons: JSX.Element[] | JSX.Element | string;\n}\n\nconst Overlay: React.FunctionComponent<Props> = ({\n\toverlayClass,\n    overlayWrapperClass,\n\ttitle,\n    text,\n    buttons\n}) => {\n\treturn (\n\t\t<div>\n\t\t\t<div className={overlayWrapperClass}></div>\n\t\t\t<div className={overlayClass}>\n                <p className=\"overlay__title\">{title}</p>\n\t\t\t\t<div className=\"overlay__text\">\n\t\t\t\t\t{text}\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t{buttons}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Overlay;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport StarsPoints from \"./StarsPoints\";\nimport Overlay from \"./Overlay\";\n\ninterface Props {\n\tisLevelFinished: boolean;\n\tisGameFinished: boolean;\n\tstarScores: Array<number>;\n\tlevel: number;\n\tmoves: number;\n\tscore: number;\n\tisNewBestScore: boolean;\n\tonLevelRestart: () => void;\n\tonShowMenu: () => void;\n\tonNextLevel: () => void;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisLevelFinished: state.levelData.isLevelFinished,\n\t\tisGameFinished: state.levelData.isGameFinished,\n\t\tstarScores: state.starScores,\n\t\tlevel: state.levelData.level,\n\t\tmoves: state.levelData.moves,\n\t\tscore: state.levelData.score,\n\t\tisNewBestScore: state.levelData.isNewBestScore,\n\t};\n};\n\nconst InfoOverlay: React.FunctionComponent<Props> = ({\n\tisLevelFinished,\n\tisGameFinished,\n\tstarScores,\n\tlevel,\n\tmoves,\n\tscore,\n\tisNewBestScore,\n\tonLevelRestart,\n\tonShowMenu,\n\tonNextLevel,\n}) => {\n\tconst infoOverlayClass = classNames(\"overlay\", {\n\t\t\tvisible: isLevelFinished,\n\t\t}),\n\t\tinfoOverlayWrapperClass = classNames(\"overlay-wrapper\", {\n\t\t\tvisible: isLevelFinished,\n\t\t}),\n\t\tscoreClass = classNames(\"overlay__score-title\", {\n\t\t\tbest: isNewBestScore,\n\t\t}),\n\t\tstarScore = starScores[level];\n\n\treturn (\n\t\t<Overlay\n\t\t\toverlayClass={infoOverlayClass}\n\t\t\toverlayWrapperClass={infoOverlayWrapperClass}\n\t\t\ttitle=\"Congratulations!\"\n\t\t\ttext={\n\t\t\t\t<div>\n\t\t\t\t\t<p className=\"overlay__info\">Level {level + 1} completed!</p>\n\t\t\t\t\t<div className=\"overlay__score-info\">\n\t\t\t\t\t\t<div className={scoreClass}>Score:</div>\n\t\t\t\t\t\t<div className=\"overlay__score-value\">{score}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overlay__score-info\">\n\t\t\t\t\t\t<div className=\"overlay__score-title\">Moves:</div>\n\t\t\t\t\t\t<div className=\"overlay__score-value\">{moves}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"overlay__line\"></div>\n\t\t\t\t\t<StarsPoints\n\t\t\t\t\t\tlevel={level}\n\t\t\t\t\t\tscore={starScore}\n\t\t\t\t\t\tcustomCssClass={\"stars-points\"}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t\tbuttons={\n\t\t\t\t<div className=\"overlay__buttons-wrapper\">\n\t\t\t\t\t<button className=\"button\" onClick={onLevelRestart}>\n\t\t\t\t\t\t<i className=\"fas fa-undo\"></i> Restart\n\t\t\t\t\t</button>\n\t\t\t\t\t{isGameFinished ? (\n\t\t\t\t\t\t<button className=\"button\" onClick={onShowMenu}>\n\t\t\t\t\t\t\tBack to menu\n\t\t\t\t\t\t</button>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button className=\"button\" onClick={onNextLevel}>\n\t\t\t\t\t\t\tNext <i className=\"fas fa-arrow-right\"></i>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default connect(mapStateToProps)(InfoOverlay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport Overlay from \"./Overlay\";\n\ninterface Props {\n\thint: string;\n\tisHintsVisible: boolean;\n\tisHintsOverlayVisible: boolean;\n\tisMenuVisible: boolean;\n\tonClose: () => void;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\thint: state.levelData.hint,\n\t\tisHintsVisible: state.isHintsVisible,\n\t\tisHintsOverlayVisible: state.isHintsOverlayVisible,\n\t\tisMenuVisible: state.isMenuVisible,\n\t};\n};\n\nconst HintsOverlay: React.FunctionComponent<Props> = ({\n\thint,\n\tisHintsVisible,\n\tisHintsOverlayVisible,\n\tisMenuVisible,\n\tonClose,\n}) => {\n\tconst hintsOverlayClass = classNames(\"overlay\", {\n\t\t\tvisible:\n\t\t\t\thint && isHintsOverlayVisible && isHintsVisible && !isMenuVisible\n\t\t\t\t\t? true\n\t\t\t\t\t: false,\n\t\t}),\n\t\thintsOverlayWrapperClass = classNames(\"overlay-wrapper\", {\n\t\t\tvisible:\n\t\t\t\thint && isHintsOverlayVisible && isHintsVisible && !isMenuVisible\n\t\t\t\t\t? true\n\t\t\t\t\t: false,\n\t\t});\n\n\treturn (\n\t\t<Overlay\n\t\t\toverlayClass={hintsOverlayClass}\n\t\t\toverlayWrapperClass={hintsOverlayWrapperClass}\n\t\t\ttitle=\"Tutorial hint\"\n\t\t\ttext={hint}\n\t\t\tbuttons={\n\t\t\t\t<button className=\"overlay__single-btn button\" onClick={onClose}>\n\t\t\t\t\tOK!\n\t\t\t\t</button>\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default connect(mapStateToProps)(HintsOverlay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport StarsPoints from \"./StarsPoints\";\n\ninterface Props {\n    starScores: Array<number>;\n\tonSetLevel: (levelNo: number) => void;\n}\n\ninterface LevelProps {\n    level: number;\n    score: number;\n\tonSetLevel: (levelNo: number) => void;\n}\n\nconst Level: React.FunctionComponent<LevelProps> = ({\n    level,\n    score,\n    onSetLevel\n}) => {\n    return (\n        <button className=\"levels__single-level\" onClick={() => onSetLevel(level - 1)}>\n            <p className=\"levels__level-no\">{level}</p>\n            <StarsPoints level={level} score={score}/>\n        </button>\n    );\n};\n\nconst mapStateToProps = (state) => {\n\treturn {\n        starScores: state.starScores\n    };\n};\n\nconst LevelsDisplay: React.FunctionComponent<Props> = ({\n    starScores,\n\tonSetLevel\n}) => {\n    let i: number,\n        uniqueKey = \"\",\n        levels = [];\n\n    for (i = 0; i < 9; i++) {\n        uniqueKey = `level_${i}`;\n        levels.push(\n            <Level level={i + 1} key={uniqueKey} score={starScores[i]} onSetLevel={onSetLevel}/>\n        );\n    }\n    \n\treturn (\n        <div className=\"levels\">\n            <p className=\"levels__header\">Levels</p>\n            {levels}\n        </div>\n\t);\n};\n\nexport default connect(mapStateToProps)(LevelsDisplay);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport LevelsDisplay from \"./LevelsDisplay\";\n\ninterface Props {\n\tisMenuVisible: boolean;\n\tlevel: number;\n\tmoves: number;\n\tisHintsVisible: boolean;\n\tonCloseMenu: () => void;\n\tonLevelRestart: () => void;\n\tonGameRestart: () => void;\n\tonSetLevel: (levelNo: number) => void;\n\tonToggleHints: () => void;\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tisMenuVisible: state.isMenuVisible,\n\t\tlevel: state.levelData.level,\n\t\tmoves: state.levelData.moves,\n\t\tisHintsVisible: state.isHintsVisible,\n\t};\n};\n\nconst MenuOverlay: React.FunctionComponent<Props> = ({\n\tisMenuVisible,\n\tlevel,\n\tmoves,\n\tisHintsVisible,\n\tonCloseMenu,\n\tonLevelRestart,\n\tonGameRestart,\n\tonSetLevel,\n\tonToggleHints,\n}) => {\n\tconst menuOverlayClass = classNames(\"menu-overlay-wrapper\", {\n\t\tvisible: isMenuVisible,\n\t});\n\n\treturn (\n\t\t<div className={menuOverlayClass}>\n\t\t\t<div className=\"menu-overlay\">\n\t\t\t\t<h1 className=\"menu-overlay__logo logo\">Swipers</h1>\n\t\t\t\t<div className=\"menu-overlay__content-wrapper\">\n\t\t\t\t\t{level > 0 || moves > 0 ? (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"menu-overlay__button button\"\n\t\t\t\t\t\t\t\tonClick={onCloseMenu}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-long-arrow-alt-left\"></i> Back to game\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"menu-overlay__button button\"\n\t\t\t\t\t\t\t\tonClick={onLevelRestart}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-undo\"></i> Restart level\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"menu-overlay__button button\"\n\t\t\t\t\t\t\tonClick={onGameRestart}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tNew game\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t{level > 0 || moves > 0 ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"menu-overlay__button button\"\n\t\t\t\t\t\t\t\tonClick={onGameRestart}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tNew game\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t{isHintsVisible ? (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"menu-overlay__button menu-overlay__hints button\"\n\t\t\t\t\t\t\t\t\tonClick={onToggleHints}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>Turn off tutorial</span>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-toggle-on\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"menu-overlay__button menu-overlay__hints button\"\n\t\t\t\t\t\t\t\t\tonClick={onToggleHints}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span>Turn on tutorial</span>\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-toggle-off\"></i>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null}\n\t\t\t\t\t<LevelsDisplay onSetLevel={onSetLevel} />\n\t\t\t\t</div>\n\t\t\t\t<p className=\"menu-overlay__credits\">\n\t\t\t\t\t© 2020{\" \"}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"http://zofiakorcz.pl\"\n\t\t\t\t\t\tclassName=\"menu-overlay__credits-link\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t>\n\t\t\t\t\t\tZofia Korcz\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default connect(mapStateToProps)(MenuOverlay);\n","import React from \"react\";\n\ninterface Props {\n\tonLevelRestart: () => void;\n\tonShowMenu: () => void;\n}\n\nconst MenuBar: React.FunctionComponent<Props> = ({\n\tonLevelRestart,\n\tonShowMenu,\n}) => {\n\treturn (\n\t\t<div className=\"menu-bar\">\n            <button className=\"button-link menu\" onClick={onShowMenu}>\n                <i className=\"fas fa-bars\"></i> Menu\n            </button>\n            <button className=\"button-link restart\" onClick={onLevelRestart}>\n                <i className=\"fas fa-undo\"></i> Reset\n            </button>\n\t\t</div>\n\t);\n};\n\nexport default MenuBar;\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport Swipe from \"react-easy-swipe\";\nimport Board from \"./Board\";\nimport Header from \"./Header\";\nimport InfoOverlay from \"./InfoOverlay\";\nimport HintsOverlay from \"./HintsOverlay\";\nimport MenuOverlay from \"./MenuOverlay\";\nimport MenuBar from \"./MenuBar\";\nimport {\n\tupdateCells,\n\tsetActiveType,\n\trestartCssClasses,\n\trestartLevel,\n\trestartGame,\n\tsetNextLevel,\n\tsetLevel,\n\ttoggleMenuOverlay,\n\ttoggleHints,\n\thideHintsOverlay,\n} from \"../actions/index\";\nimport { Cell, UpdateCellsObj } from \"../misc/tsTypes\";\nimport { WALL_TYPE } from \"../misc/constants\";\n\ninterface GameProps {\n\tupdateCells: typeof updateCells;\n\tsetActiveType: typeof setActiveType;\n\trestartCssClasses: typeof restartCssClasses;\n\trestartLevel: typeof restartLevel;\n\trestartGame: typeof restartGame;\n\tsetNextLevel: typeof setNextLevel;\n\tsetLevel: typeof setLevel;\n\ttoggleMenuOverlay: typeof toggleMenuOverlay;\n\ttoggleHints: typeof toggleHints;\n\thideHintsOverlay: typeof hideHintsOverlay;\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tupdateCells: (updateCellsObj: UpdateCellsObj) =>\n\t\t\tdispatch(updateCells(updateCellsObj)),\n\t\tsetActiveType: (cell: Cell) => dispatch(setActiveType(cell)),\n\t\trestartCssClasses: () => dispatch(restartCssClasses()),\n\t\trestartLevel: () => dispatch(restartLevel()),\n\t\trestartGame: () => dispatch(restartGame()),\n\t\tsetNextLevel: () => dispatch(setNextLevel()),\n\t\tsetLevel: (levelNo: number) => dispatch(setLevel(levelNo)),\n\t\ttoggleMenuOverlay: () => dispatch(toggleMenuOverlay()),\n\t\ttoggleHints: () => dispatch(toggleHints()),\n\t\thideHintsOverlay: () => dispatch(hideHintsOverlay()),\n\t};\n};\n\nconst IDLE_TIMER = 200;\nlet isKeyPressed = false;\n\nclass Game extends React.Component<GameProps> {\n\tcomponentDidMount() {\n\t\tdocument.addEventListener(\"keydown\", (event) => {\n\t\t\tthis.handleMove(event.key);\n\t\t});\n\t}\n\n\thandleMove = (eventKey: string, target: HTMLElement = null): void => {\n\t\tconst selectedType = parseInt(target.dataset.type, 10);\n\t\tlet newActiveType;\n\n\t\tif (!isKeyPressed) {\n\t\t\tif (\n\t\t\t\t!target.classList.contains(\"tile-active\") &&\n\t\t\t\tselectedType !== WALL_TYPE\n\t\t\t) {\n\t\t\t\tnewActiveType = selectedType;\n\t\t\t}\n\t\t\tthis.handleCellsUpdate(eventKey, newActiveType);\n\t\t\tisKeyPressed = true;\n\t\t\twindow.setTimeout(() => {\n\t\t\t\tisKeyPressed = false;\n\t\t\t}, IDLE_TIMER); //to prevent moving tiles diagonally\n\t\t}\n\t};\n\n\thandleCellsUpdate = (\n\t\teventKey: string,\n\t\tnewActiveType: number = null\n\t): void => {\n\t\tconst KeyPressMap = {\n\t\t\tArrowUp: 1,\n\t\t\tArrowRight: 2,\n\t\t\tArrowDown: 3,\n\t\t\tArrowLeft: 4,\n\t\t\tw: 1, // W\n\t\t\td: 2, // D\n\t\t\ts: 3, // S\n\t\t\ta: 4, // A\n\t\t\tSwipeUp: 1,\n\t\t\tSwipeRight: 2,\n\t\t\tSwipeDown: 3,\n\t\t\tSwipeLeft: 4,\n\t\t};\n\n\t\tif (KeyPressMap[eventKey]) {\n\t\t\tthis.props.updateCells({\n\t\t\t\tkeyPressedNo: KeyPressMap[eventKey],\n\t\t\t\tnewActiveType: newActiveType,\n\t\t\t});\n\t\t}\n\t};\n\n\thandleMouseClick = (cell: Cell): void => {\n\t\tthis.props.setActiveType(cell);\n\t};\n\n\thandleRestartLevel = (): void => {\n\t\tthis.props.restartLevel();\n\t};\n\n\thandleRestartGame = (): void => {\n\t\tthis.props.restartGame();\n\t};\n\n\thandleToggleMenu = (): void => {\n\t\tthis.props.toggleMenuOverlay();\n\t};\n\n\thandleSetNextLevel = (): void => {\n\t\tthis.props.setNextLevel();\n\t};\n\n\thandleSetLevel = (levelNo: number): void => {\n\t\tthis.props.setLevel(levelNo);\n\t};\n\n\thandleHideHintsOverlay = (): void => {\n\t\tthis.props.hideHintsOverlay();\n\t};\n\n\thandleToggleHints = (): void => {\n\t\tthis.props.toggleHints();\n\t};\n\n\tonSwipeUp = (no, event): void => {\n\t\tthis.handleMove(\"SwipeUp\", event.target);\n\t};\n\n\tonSwipeDown = (no, event): void => {\n\t\tthis.handleMove(\"SwipeDown\", event.target);\n\t};\n\n\tonSwipeLeft = (no, event): void => {\n\t\tthis.handleMove(\"SwipeLeft\", event.target);\n\t};\n\n\tonSwipeRight = (no, event): void => {\n\t\tthis.handleMove(\"SwipeRight\", event.target);\n\t};\n\n\tonSwipeMove = (position, event): boolean => {\n\t\treturn true; //to prevent accidental scrolling on swipe\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Swipe\n\t\t\t\t\tinnerRef={() => {}}\n\t\t\t\t\ttolerance={40}\n\t\t\t\t\tonSwipeMove={this.onSwipeMove}\n\t\t\t\t\tonSwipeUp={this.onSwipeUp.bind(this)}\n\t\t\t\t\tonSwipeDown={this.onSwipeDown.bind(this)}\n\t\t\t\t\tonSwipeLeft={this.onSwipeLeft.bind(this)}\n\t\t\t\t\tonSwipeRight={this.onSwipeRight.bind(this)}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"swipeable\">\n\t\t\t\t\t\t<div className=\"app\">\n\t\t\t\t\t\t\t<MenuOverlay\n\t\t\t\t\t\t\t\tonCloseMenu={this.handleToggleMenu}\n\t\t\t\t\t\t\t\tonLevelRestart={this.handleRestartLevel}\n\t\t\t\t\t\t\t\tonGameRestart={this.handleRestartGame}\n\t\t\t\t\t\t\t\tonSetLevel={this.handleSetLevel}\n\t\t\t\t\t\t\t\tonToggleHints={this.handleToggleHints}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Header />\n\t\t\t\t\t\t\t<Board onMouseClick={this.handleMouseClick} />\n\t\t\t\t\t\t\t<MenuBar\n\t\t\t\t\t\t\t\tonShowMenu={this.handleToggleMenu}\n\t\t\t\t\t\t\t\tonLevelRestart={this.handleRestartLevel}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<InfoOverlay\n\t\t\t\t\t\t\t\tonLevelRestart={this.handleRestartLevel}\n\t\t\t\t\t\t\t\tonShowMenu={this.handleToggleMenu}\n\t\t\t\t\t\t\t\tonNextLevel={this.handleSetNextLevel}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<HintsOverlay onClose={this.handleHideHintsOverlay} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Swipe>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(Game);\n","import {\n\tUPDATE_CELLS,\n\tSET_ACTIVE_TYPE,\n\tRESTART_CSS_CLASSES,\n\tRESTART_LEVEL,\n\tRESTART_GAME,\n\tSET_NEXT_LEVEL,\n\tSET_LEVEL,\n\tTOGGLE_MENU_OVERLAY,\n\tTOGGLE_HINTS,\n\tSHOW_HINTS_OVERLAY,\n\tHIDE_HINTS_OVERLAY,\n} from \"./actionTypes\";\nimport {\n\tCell,\n\tUpdateCellsObj,\n\tUpdateCellsAction,\n\tSetActiveTypeAction,\n\tRestartCssClasses,\n\tRestartLevelAction,\n\tRestartGameAction,\n\tSetNextLevelAction,\n\tSetLevelAction,\n\ttoggleMenuOverlayAction,\n\ttoggleHintsAction,\n\tshowHintsOverlayAction,\n\thideHintsOverlayAction,\n} from \"../misc/tsTypes\";\n\nexport function updateCells(updateCellsObj: UpdateCellsObj): UpdateCellsAction {\n\treturn {\n\t\ttype: UPDATE_CELLS,\n\t\tpayload: updateCellsObj,\n\t};\n}\n\nexport function setActiveType(clickedTile: Cell): SetActiveTypeAction {\n\treturn {\n\t\ttype: SET_ACTIVE_TYPE,\n\t\tpayload: clickedTile,\n\t};\n}\n\nexport function restartCssClasses(): RestartCssClasses {\n\treturn {\n\t\ttype: RESTART_CSS_CLASSES,\n\t};\n}\n\nexport function restartLevel(): RestartLevelAction {\n\treturn {\n\t\ttype: RESTART_LEVEL,\n\t};\n}\n\nexport function restartGame(): RestartGameAction {\n\treturn {\n\t\ttype: RESTART_GAME,\n\t};\n}\n\nexport function setNextLevel(): SetNextLevelAction {\n\treturn {\n\t\ttype: SET_NEXT_LEVEL,\n\t};\n}\n\nexport function setLevel(levelNo: number): SetLevelAction {\n\treturn {\n\t\ttype: SET_LEVEL,\n\t\tpayload: levelNo,\n\t};\n}\n\nexport function toggleMenuOverlay(): toggleMenuOverlayAction {\n\treturn {\n\t\ttype: TOGGLE_MENU_OVERLAY,\n\t};\n}\n\nexport function toggleHints(): toggleHintsAction {\n\treturn {\n\t\ttype: TOGGLE_HINTS,\n\t};\n}\n\nexport function showHintsOverlay(): showHintsOverlayAction {\n\treturn {\n\t\ttype: SHOW_HINTS_OVERLAY,\n\t};\n}\n\nexport function hideHintsOverlay(): hideHintsOverlayAction {\n\treturn {\n\t\ttype: HIDE_HINTS_OVERLAY,\n\t};\n}\n","import React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport reducers from \"./js/reducers\";\nimport Game from \"./js/components/Game\";\n\nconst store = createStore(reducers);\n\nfunction App() {\n\treturn (\n\t\t<div>\n\t\t\t<Provider store={store}>\n\t\t\t\t<Game />\n\t\t\t</Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\");\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\");\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}